cfw-latency-timeout: 3000
cfw-latency-type: 1
cfw-latency-url: http://cp.cloudflare.com/generate_204
clash-for-android:
  ui-subtitle-pattern: "[\u4e00-\u9fa5]{2,4}"
external-controller: 0.0.0.0:6170
ipv6: true
log-level: info
mixed-port: 7890
mode: rule
port: 7891
secret: ted423
socks-port: 7892

__nodes__

proxy-groups:
- name: Proxy
  type: select
  proxies:
  - DIRECT
  - REJECT
__Proxy__
- name: TopBlocked
  type: select
  proxies:
  - Proxy
  - DIRECT
  - REJECT
__TopBlocked__
- name: Domestic
  type: select
  proxies:
  - DIRECT
  - Proxy
  - REJECT
__Domestic__
- name: Spam
  type: select
  proxies:
  - REJECT
  - DIRECT
  - Proxy
__Spam__
# - name: Crack
#   type: select
#   proxies:
#   - REJECT
#   - DIRECT
#   - Proxy
# Crack
# - name: Downloader
#   type: select
#   proxies:
#   - DIRECT
#   - Proxy
#   - REJECT
# Downloader
- name: Special
  type: select
  proxies:
  - DIRECT
  - Proxy
  - REJECT
__Special__
- name: Apple
  type: select
  proxies:
  - DIRECT
  - Proxy
  - REJECT
__Apple__
- name: Blizzard
  type: select
  proxies:
  - DIRECT
  - Proxy
  - REJECT
__Blizzard__
- name: Crypto
  type: select
  proxies:
  - Proxy
  - DIRECT
  - REJECT
__Crypto__
- name: Discord
  type: select
  proxies:
  - Proxy
  - DIRECT
  - REJECT
__Discord__
- name: Drive
  type: select
  proxies:
  - Proxy
  - DIRECT
  - REJECT
__Drive__
- name: Microsoft
  type: select
  proxies:
  - DIRECT
  - Proxy
  - REJECT
__Microsoft__
- name: miHoYo
  type: select
  proxies:
  - DIRECT
  - Proxy
  - REJECT
__miHoYo__
- name: OpenAI
  type: select
  proxies:
  - Proxy
  - DIRECT
  - REJECT
__OpenAI__
- name: PayPal
  type: select
  proxies:
  - Proxy
  - DIRECT
  - REJECT
__PayPal__
- name: PT
  type: select
  proxies:
  - Proxy
  - DIRECT
  - REJECT
__PT__
- name: Scholar
  type: select
  proxies:
  - DIRECT
  - Proxy
  - REJECT
__Scholar__
- name: Speedtest
  type: select
  proxies:
  - Proxy
  - DIRECT
  - REJECT
__Speedtest__
- name: SSH
  type: select
  proxies:
  - Proxy
  - DIRECT
  - REJECT
__SSH__
- name: Steam
  type: select
  proxies:
  - DIRECT
  - Proxy
  - REJECT
__Steam__
- name: Telegram
  type: select
  proxies:
  - Proxy
  - DIRECT
  - REJECT
__Telegram__
- name: Disney
  type: select
  proxies:
  - Proxy
  - DIRECT
  - REJECT
__Disney__
- name: Douyin
  type: select
  proxies:
  - DIRECT
  - Proxy
  - REJECT
__Douyin__
- name: Netflix
  type: select
  proxies:
  - Proxy
  - DIRECT
  - REJECT
__Netflix__
- name: Spotify
  type: select
  proxies:
  - Proxy
  - DIRECT
  - REJECT
__Spotify__
- name: YouTube
  type: select
  proxies:
  - Proxy
  - DIRECT
  - REJECT
__YouTube__
- name: DomesticTV
  type: select
  proxies:
  - DIRECT
  - Proxy
  - REJECT
__DomesticTV__
- name: GlobalTV
  type: select
  proxies:
  - Proxy
  - DIRECT
  - REJECT
__GlobalTV__
- name: Others
  type: select
  proxies:
  - Proxy
  - DIRECT
  - REJECT
__Others__

rule-providers:
  ABC:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/ABC.yaml'
    path: ./Rules/Media/ABC
    interval: 86400
  Abema TV:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/Abema%20TV.yaml'
    path: ./Rules/Media/Abema_TV
    interval: 86400
  Amazon:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/Amazon.yaml'
    path: ./Rules/Media/Amazon
    interval: 86400
  Apple:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Apple.yaml'
    path: ./Rules/Apple
    interval: 86400
  Apple Music:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/Apple%20Music.yaml'
    path: ./Rules/Media/Apple_Music
    interval: 86400
  Apple News:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/Apple%20News.yaml'
    path: ./Rules/Media/Apple_News
    interval: 86400
  Apple TV:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/Apple%20TV.yaml'
    path: ./Rules/Media/Apple_TV
    interval: 86400
  Bahamut:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/Bahamut.yaml'
    path: ./Rules/Media/Bahamut
    interval: 86400
  BBC iPlayer:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/BBC%20iPlayer.yaml'
    path: ./Rules/Media/BBC_iPlayer
    interval: 86400
  Bilibili:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/Bilibili.yaml'
    path: ./Rules/Media/Bilibili
    interval: 86400
  Blizzard:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/mwhds97/prefbase/master/ruleset/clash/Blizzard.yaml'
    path: ./Rules/Blizzard
    interval: 86400
  # Crack:
  #   type: http
  #   behavior: classical
  #   url: 'https://raw.gitmirror.com/mwhds97/prefbase/master/ruleset/clash/Crack.yaml'
  #   path: ./Rules/Crack
  #   interval: 86400
  Crypto:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Crypto.yaml'
    path: ./Rules/Crypto
    interval: 86400
  DAZN:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/DAZN.yaml'
    path: ./Rules/Media/DAZN
    interval: 86400
  Direct:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/mwhds97/prefbase/master/ruleset/clash/Direct.yaml'
    path: ./Rules/Direct
    interval: 86400
  Discord:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Discord.yaml'
    path: ./Rules/Discord
    interval: 86400
  Discovery Plus:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/Discovery%20Plus.yaml'
    path: ./Rules/Media/Discovery_Plus
    interval: 86400
  Disney Plus:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/Disney%20Plus.yaml'
    path: ./Rules/Media/Disney_Plus
    interval: 86400
  Domestic:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Domestic.yaml'
    path: ./Rules/Domestic
    interval: 86400
  Douyin:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Douyin.yaml'
    path: ./Rules/Douyin
    interval: 86400
  # Downloader:
  #   type: http
  #   behavior: classical
  #   url: 'https://raw.gitmirror.com/mwhds97/prefbase/master/ruleset/clash/Downloader.yaml'
  #   path: ./Rules/Downloader
  #   interval: 86400
  Drive:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/mwhds97/prefbase/master/ruleset/clash/Drive.yaml'
    path: ./Rules/Drive
    interval: 86400
  encoreTVB:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/encoreTVB.yaml'
    path: ./Rules/Media/encoreTVB
    interval: 86400
  F1 TV:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/F1%20TV.yaml'
    path: ./Rules/Media/F1_TV
    interval: 86400
  Fox Now:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/Fox%20Now.yaml'
    path: ./Rules/Media/Fox_Now
    interval: 86400
  Fox+:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/Fox%2B.yaml'
    path: ./Rules/Media/Fox+
    interval: 86400
  HBO Go:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/HBO%20Go.yaml'
    path: ./Rules/Media/HBO_Go
    interval: 86400
  HBO Max:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/HBO%20Max.yaml'
    path: ./Rules/Media/HBO_Max
    interval: 86400
  Hulu:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/Hulu.yaml'
    path: ./Rules/Media/Hulu
    interval: 86400
  Hulu Japan:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/Hulu%20Japan.yaml'
    path: ./Rules/Media/Hulu_Japan
    interval: 86400
  IQ:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/IQ.yaml'
    path: ./Rules/Media/IQ
    interval: 86400
  IQIYI:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/IQIYI.yaml'
    path: ./Rules/Media/IQIYI
    interval: 86400
  Japonx:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/Japonx.yaml'
    path: ./Rules/Media/Japonx
    interval: 86400
  JOOX:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/JOOX.yaml'
    path: ./Rules/Media/JOOX
    interval: 86400
  KKBOX:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/KKBOX.yaml'
    path: ./Rules/Media/KKBOX
    interval: 86400
  KKTV:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/KKTV.yaml'
    path: ./Rules/Media/KKTV
    interval: 86400
  LAN:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/LAN.yaml'
    path: ./Rules/LAN
    interval: 86400
  Letv:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/Letv.yaml'
    path: ./Rules/Media/Letv
    interval: 86400
  Line TV:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/Line%20TV.yaml'
    path: ./Rules/Media/Line_TV
    interval: 86400
  Microsoft:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Microsoft.yaml'
    path: ./Rules/Microsoft
    interval: 86400
  miHoYo:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/miHoYo.yaml'
    path: ./Rules/miHoYo
    interval: 86400
  # MOO:
  #   type: http
  #   behavior: classical
  #   url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/MOO.yaml'
  #   path: ./Rules/Media/MOO
  #   interval: 86400
  myTV SUPER:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/myTV%20SUPER.yaml'
    path: ./Rules/Media/myTV_SUPER
    interval: 86400
  Netease Music:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/Netease%20Music.yaml'
    path: ./Rules/Media/Netease_Music
    interval: 86400
  Netflix:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/Netflix.yaml'
    path: ./Rules/Media/Netflix
    interval: 86400
  Niconico:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/Niconico.yaml'
    path: ./Rules/Media/Niconico
    interval: 86400
  OpenAI:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/OpenAI.yaml'
    path: ./Rules/OpenAI
    interval: 86400
  Pandora:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/Pandora.yaml'
    path: ./Rules/Media/Pandora
    interval: 86400
  PayPal:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/PayPal.yaml'
    path: ./Rules/PayPal
    interval: 86400
  PBS:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/PBS.yaml'
    path: ./Rules/Media/PBS
    interval: 86400
  Pornhub:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/Pornhub.yaml'
    path: ./Rules/Media/Pornhub
    interval: 86400
  Proxy:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/mwhds97/prefbase/master/ruleset/clash/Proxy.yaml'
    path: ./Rules/Proxy
    interval: 86400
  PT:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/mwhds97/prefbase/master/ruleset/clash/PT.yaml'
    path: ./Rules/PT
    interval: 86400
  Reject:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/mwhds97/prefbase/master/ruleset/clash/Reject.yaml'
    path: ./Rules/Reject
    interval: 86400
  Scholar:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Scholar.yaml'
    path: ./Rules/Scholar
    interval: 86400
  Soundcloud:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/Soundcloud.yaml'
    path: ./Rules/Media/Soundcloud
    interval: 86400
  Spam:
    type: http
    behavior: domain
    url: 'https://raw.gitmirror.com/blackmatrix7/ios_rule_script/master/rule/Clash/Advertising/Advertising_Domain.yaml'
    path: ./Rules/Spam
    interval: 86400
  Special:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/mwhds97/prefbase/master/ruleset/clash/Special.yaml'
    path: ./Rules/Special
    interval: 86400
  Speedtest:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Speedtest.yaml'
    path: ./Rules/Speedtest
    interval: 86400
  Spotify:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/Spotify.yaml'
    path: ./Rules/Media/Spotify
    interval: 86400
  SSH:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/mwhds97/prefbase/master/ruleset/clash/SSH.yaml'
    path: ./Rules/SSH
    interval: 86400
  Steam:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/mwhds97/prefbase/master/ruleset/clash/Steam.yaml'
    path: ./Rules/Steam
    interval: 86400
  Telegram:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Telegram.yaml'
    path: ./Rules/Telegram
    interval: 86400
  Tencent Video:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/Tencent%20Video.yaml'
    path: ./Rules/Media/Tencent_Video
    interval: 86400
  TopBlocked:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Proxy.yaml'
    path: ./Rules/TopBlocked
    interval: 86400
  ViuTV:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/ViuTV.yaml'
    path: ./Rules/Media/ViuTV
    interval: 86400
  WeTV:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/WeTV.yaml'
    path: ./Rules/Media/WeTV
    interval: 86400
  YouTube:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/YouTube.yaml'
    path: ./Rules/Media/YouTube
    interval: 86400
  # YouTube Music:
  #   type: http
  #   behavior: classical
  #   url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/YouTube%20Music.yaml'
  #   path: ./Rules/Media/YouTube_Music
  #   interval: 86400
  Youku:
    type: http
    behavior: classical
    url: 'https://raw.gitmirror.com/dler-io/Rules/main/Clash/Provider/Media/Youku.yaml'
    path: ./Rules/Media/Youku
    interval: 86400

rules:
- SCRIPT,BLOCK_QUIC,REJECT
- RULE-SET,Reject,REJECT
# - RULE-SET,Crack,Crack
- RULE-SET,SSH,SSH
- RULE-SET,Direct,DIRECT
- RULE-SET,Proxy,Proxy
- RULE-SET,Special,Special
# - RULE-SET,Downloader,Downloader
- RULE-SET,Spam,Spam
- RULE-SET,Apple,Apple
- RULE-SET,Blizzard,Blizzard
- RULE-SET,Crypto,Crypto
- RULE-SET,Discord,Discord
- RULE-SET,Drive,Drive
- RULE-SET,Microsoft,Microsoft
- RULE-SET,miHoYo,miHoYo
- RULE-SET,OpenAI,OpenAI
- RULE-SET,PayPal,PayPal
- RULE-SET,PT,PT
- RULE-SET,Scholar,Scholar
- RULE-SET,Speedtest,Speedtest
- RULE-SET,Steam,Steam
- RULE-SET,Telegram,Telegram
- RULE-SET,Disney Plus,Disney
- RULE-SET,Douyin,Douyin
- RULE-SET,Netflix,Netflix
- RULE-SET,Spotify,Spotify
- RULE-SET,YouTube,YouTube
# - RULE-SET,YouTube Music,YouTube
- RULE-SET,Bilibili,DomesticTV
- RULE-SET,IQ,DomesticTV
- RULE-SET,IQIYI,DomesticTV
- RULE-SET,Letv,DomesticTV
# - RULE-SET,MOO,DomesticTV
- RULE-SET,Netease Music,DomesticTV
- RULE-SET,Tencent Video,DomesticTV
- RULE-SET,WeTV,DomesticTV
- RULE-SET,Youku,DomesticTV
- RULE-SET,ABC,GlobalTV
- RULE-SET,Abema TV,GlobalTV
- RULE-SET,Amazon,GlobalTV
- RULE-SET,Apple Music,GlobalTV
- RULE-SET,Apple News,GlobalTV
- RULE-SET,Apple TV,GlobalTV
- RULE-SET,Bahamut,GlobalTV
- RULE-SET,BBC iPlayer,GlobalTV
- RULE-SET,DAZN,GlobalTV
- RULE-SET,Discovery Plus,GlobalTV
- RULE-SET,encoreTVB,GlobalTV
- RULE-SET,F1 TV,GlobalTV
- RULE-SET,Fox Now,GlobalTV
- RULE-SET,Fox+,GlobalTV
- RULE-SET,HBO Go,GlobalTV
- RULE-SET,HBO Max,GlobalTV
- RULE-SET,Hulu,GlobalTV
- RULE-SET,Hulu Japan,GlobalTV
- RULE-SET,Japonx,GlobalTV
- RULE-SET,JOOX,GlobalTV
- RULE-SET,KKBOX,GlobalTV
- RULE-SET,KKTV,GlobalTV
- RULE-SET,Line TV,GlobalTV
- RULE-SET,myTV SUPER,GlobalTV
- RULE-SET,Niconico,GlobalTV
- RULE-SET,Pandora,GlobalTV
- RULE-SET,PBS,GlobalTV
- RULE-SET,Pornhub,GlobalTV
- RULE-SET,Soundcloud,GlobalTV
- RULE-SET,ViuTV,GlobalTV
- RULE-SET,TopBlocked,TopBlocked
- RULE-SET,Domestic,Domestic
- RULE-SET,LAN,DIRECT
- GEOIP,CN,Domestic
- MATCH,Others

script:
  shortcuts:
    BLOCK_QUIC: 'network == "udp" and dst_port == 443'
  code: |
    def main(ctx, metadata):
        ruleset_action = {
            "Reject": "REJECT",
            # "Crack": "Crack",
            "SSH": "SSH",
            "Direct": "DIRECT",
            "Proxy": "Proxy",
            "Special": "Special",
            # "Downloader": "Downloader",
            "Spam": "Spam",
            "Apple": "Apple",
            "Blizzard": "Blizzard",
            "Crypto": "Crypto",
            "Discord": "Discord",
            "Drive": "Drive",
            "Microsoft": "Microsoft",
            "miHoYo": "miHoYo",
            "OpenAI": "OpenAI",
            "PayPal": "PayPal",
            "PT": "PT",
            "Scholar": "Scholar",
            "Speedtest": "Speedtest",
            "Steam": "Steam",
            "Telegram": "Telegram",
            "Disney Plus": "Disney",
            "Douyin": "Douyin",
            "Netflix": "Netflix",
            "Spotify": "Spotify",
            "YouTube": "YouTube",
            "Bilibili": "DomesticTV",
            "IQ": "DomesticTV",
            "IQIYI": "DomesticTV",
            "Letv": "DomesticTV",
            "Netease Music": "DomesticTV",
            "Tencent Video": "DomesticTV",
            "WeTV": "DomesticTV",
            "Youku": "DomesticTV",
            "ABC": "GlobalTV",
            "Abema TV": "GlobalTV",
            "Amazon": "GlobalTV",
            "Apple Music": "GlobalTV",
            "Apple News": "GlobalTV",
            "Apple TV": "GlobalTV",
            "Bahamut": "GlobalTV",
            "BBC iPlayer": "GlobalTV",
            "DAZN": "GlobalTV",
            "Discovery Plus": "GlobalTV",
            "encoreTVB": "GlobalTV",
            "F1 TV": "GlobalTV",
            "Fox Now": "GlobalTV",
            "Fox+": "GlobalTV",
            "HBO Go": "GlobalTV",
            "HBO Max": "GlobalTV",
            "Hulu": "GlobalTV",
            "Hulu Japan": "GlobalTV",
            "Japonx": "GlobalTV",
            "JOOX": "GlobalTV",
            "KKBOX": "GlobalTV",
            "KKTV": "GlobalTV",
            "Line TV": "GlobalTV",
            "myTV SUPER": "GlobalTV",
            "Niconico": "GlobalTV",
            "Pandora": "GlobalTV",
            "PBS": "GlobalTV",
            "Pornhub": "GlobalTV",
            "Soundcloud": "GlobalTV",
            "ViuTV": "GlobalTV",
            "TopBlocked": "TopBlocked",
            "Domestic": "Domestic",
            "LAN": "DIRECT",
        }
        if metadata["network"] == "udp" and metadata["dst_port"] == "443":
            return "REJECT"
        port_list = [
            "21",
            "22",
            "23",
            "53",
            "80",
            "123",
            "143",
            "194",
            "443",
            "465",
            "587",
            "853",
            "993",
            "995",
            "998",
            "2052",
            "2053",
            "2082",
            "2083",
            "2086",
            "2095",
            "2096",
            "5222",
            "5228",
            "5229",
            "5230",
            "8080",
            "8443",
            "8880",
            "8888",
            "8889",
        ]
        # if metadata["dst_port"] not in port_list:
        #   return "DIRECT"
        if metadata["dst_ip"] == "":
            metadata["dst_ip"] = ctx.resolve_ip(metadata["host"])
        for ruleset in ruleset_action:
            if ctx.rule_providers[ruleset].match(metadata):
                return ruleset_action[ruleset]
        if metadata["dst_ip"] != "":
            code = ctx.geoip(metadata["dst_ip"])
            if code == "CN":
                return "Domestic"
        return "Others"
